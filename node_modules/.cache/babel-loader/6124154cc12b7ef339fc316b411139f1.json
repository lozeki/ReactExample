{"ast":null,"code":"// src/js/reducers/index.js\nconst initialState = {\n  articles: [],\n  remoteArticles: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"ADD_ARTICLE\") {\n    return Object.assign({}, state, {\n      articles: state.articles.concat(action.payload) // Update the articles: value for the state\n\n    });\n  } // if (action.type === \"DATA_LOADED\") {\n  //     return Object.assign({}, state, {\n  //       remoteArticles: state.remoteArticles.concat(action.payload)\n  //     });\n  //   }\n\n\n  return state; //the state in redux comes from reducers\n}\n\n;\nexport default rootReducer;","map":{"version":3,"sources":["/home/trnguyen/React_ws/react-redux-tutorial/src/js/reducers/index.js"],"names":["initialState","articles","remoteArticles","rootReducer","state","action","type","Object","assign","concat","payload"],"mappings":"AAAA;AAEA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,cAAc,EAAE;AAFC,CAArB;;AAKE,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AACjD,MAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AAC/B,WAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BH,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeQ,MAAf,CAAsBJ,MAAM,CAACK,OAA7B,CADkB,CACoB;;AADpB,KAAzB,CAAP;AAGC,GAL4C,CAOjD;AACA;AACA;AACA;AACA;;;AACA,SAAON,KAAP,CAZiD,CAYnC;AACf;;AAAA;AAED,eAAeD,WAAf","sourcesContent":["// src/js/reducers/index.js\n\nconst initialState = {\n    articles: [],\n    remoteArticles: []\n  };\n  \n  function rootReducer(state = initialState, action) {\n    if (action.type === \"ADD_ARTICLE\") {\n        return Object.assign({}, state, {\n            articles: state.articles.concat(action.payload) // Update the articles: value for the state\n          });\n        }\n        \n    // if (action.type === \"DATA_LOADED\") {\n    //     return Object.assign({}, state, {\n    //       remoteArticles: state.remoteArticles.concat(action.payload)\n    //     });\n    //   }\n    return state; //the state in redux comes from reducers\n  };\n  \n  export default rootReducer;"]},"metadata":{},"sourceType":"module"}