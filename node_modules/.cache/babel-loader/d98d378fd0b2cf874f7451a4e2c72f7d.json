{"ast":null,"code":"var _jsxFileName = \"/home/trnguyen/React_ws/react-redux-tutorial/src/js/components/Form.js\";\n// src/js/components/Form.jsx\n// This file uses the standard React state (not Redux) for handling the input data \nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addArticle } from \"../actions/index\"; // function mapDispatchToProps(dispatch) { //Dispath/connect Redux addArticle action with the React props\n//   return {  \n//     addArticle: article => dispatch(addArticle(article)) // action addArticle is dispatched to trigger an update to the store\n//   };\n// }\n//Or simplier solution \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapDispatchToProps = {\n  addArticle\n};\n\nclass ConnectedForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const {\n      title\n    } = this.state;\n    this.props.addArticle({\n      title\n    });\n    this.setState({\n      title: \"\"\n    });\n  }\n\n  render() {\n    const {\n      title\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"SAVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm); // the first argument for connect must be null when mapStateToProps is absent like in our example\n\nexport default Form;","map":{"version":3,"sources":["/home/trnguyen/React_ws/react-redux-tutorial/src/js/components/Form.js"],"names":["React","Component","connect","addArticle","mapDispatchToProps","ConnectedForm","constructor","props","state","title","handleChange","bind","handleSubmit","event","setState","target","id","value","preventDefault","render","Form"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;AACA;AACA;AACA;AACA;AAEA;;;AACA,MAAMC,kBAAkB,GAAG;AAACD,EAAAA;AAAD,CAA3B;;AAEA,MAAME,aAAN,SAA4BJ,SAA5B,CAAsC;AACpCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAAE,OAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,GAAmBH,KAAK,CAACE,MAAN,CAAaE;AAAlC,KAAd;AACD;;AAEDL,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACK,cAAN;AACA,UAAM;AAAET,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,SAAKD,KAAL,CAAWJ,UAAX,CAAsB;AAAEM,MAAAA;AAAF,KAAtB;AACA,SAAKK,QAAL,CAAc;AAAEL,MAAAA,KAAK,EAAE;AAAT,KAAd;AACD;;AACDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKI,YAArB;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,KAAK,EAAEH,KAHT;AAIE,UAAA,QAAQ,EAAE,KAAKC;AAJjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AApCmC;;AAuCtC,MAAMU,IAAI,GAAGlB,OAAO,CAAE,IAAF,EAAQE,kBAAR,CAAP,CAAmCC,aAAnC,CAAb,C,CACA;;AACA,eAAee,IAAf","sourcesContent":["// src/js/components/Form.jsx\n// This file uses the standard React state (not Redux) for handling the input data \n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addArticle } from \"../actions/index\";\n\n// function mapDispatchToProps(dispatch) { //Dispath/connect Redux addArticle action with the React props\n//   return {  \n//     addArticle: article => dispatch(addArticle(article)) // action addArticle is dispatched to trigger an update to the store\n//   };\n// }\n\n//Or simplier solution \nconst mapDispatchToProps = {addArticle};\n\nclass ConnectedForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.id]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { title } = this.state;\n    this.props.addArticle({ title });\n    this.setState({ title: \"\" });\n  }\n  render() {\n    const { title } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={this.handleChange}\n          />\n        </div>\n        <button type=\"submit\">SAVE</button>\n      </form>\n    );\n  }\n}\n\nconst Form = connect( null, mapDispatchToProps)(ConnectedForm);\n// the first argument for connect must be null when mapStateToProps is absent like in our example\nexport default Form;"]},"metadata":{},"sourceType":"module"}